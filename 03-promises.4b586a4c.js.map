{"mappings":"khBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAU,CACdC,SAAU,gBACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,cAGNC,SAASC,cAAc,QAC/BC,MAAMC,gBAAkB,UAEhBH,SAASC,cAAc,SAAtC,IAEMG,EAAWJ,SAASC,cAAc,yBAElCI,EAASL,SAASC,cAAc,uBAEhCK,EAAQN,SAASC,cAAc,sBAC/BM,EAAWP,SAASC,cAAc,wBA2BxC,SAASO,EAAcd,EAAUe,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEjB,WAAUe,UAInBG,EAAO,CAAElB,WAAUe,S,GAIrBA,E,IAvCPJ,EAAQW,iBAAiB,SAAS,SAACC,GAE/BZ,EAAQa,YAAcC,OAAOF,EAAMG,cAAcC,OACjDC,QAAQC,IAAIlB,EAAQa,Y,IAGxBZ,EAAOU,iBAAiB,SAAS,SAACC,GAE9BX,EAAOY,YAAcC,OAAOF,EAAMG,cAAcC,OAChDC,QAAQE,IAAIlB,EAAOY,Y,IAGvBX,EAASS,iBAAiB,SAAS,SAACC,GACnCV,EAASW,YAAcC,OAAOF,EAAMG,cAAcC,OAC/CC,QAAQE,IAAIjB,EAASW,Y,IAKtBd,EAASY,iBAAiB,SAyB7B,SAAyBC,GAEvB,GADAA,EAAMQ,iBACFpB,EAAQa,YAAc,GAAKZ,EAAOY,YAAc,GAAKX,EAASW,aAAe,EAE7E,YADF3B,EAAAmC,OAAOC,QAAQ,yCAA4ClC,GAG3D6B,QAAQE,IAAIP,EAAMG,eAElB,IADA,IAAIQ,EAAeT,OAAOd,EAAQa,aACzBW,EAAI,EAAGA,GAAKtB,EAASW,YAAaW,GAAK,EAE9CrB,EAAcqB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGrC,EAAQqC,EAARrC,SAAUe,EAAKsB,EAALtB,MACjBlB,EAAAmC,OAAOM,QAAQ,uBAAwCC,OAAfvC,EAAS,QAAYuC,OAANxB,EAAM,MAAKhB,E,IAEnEyC,OAAM,SAAAH,G,IAAGrC,EAAQqC,EAARrC,SAAUe,EAAKsB,EAALtB,MAClBlB,EAAAmC,OAAOC,QAAQ,sBAAqCM,OAAfvC,EAAS,QAAYuC,OAANxB,EAAM,MAAKhB,E,IAEnEmC,GAAgBT,OAAOb,EAAOY,Y,KAxChCb,EAAQa,YAAc,GAAKZ,EAAOY,YAAc,GAAKX,EAASW,aAAa,IAC7E3B,EAAAmC,OAAOC,QAAQ,yCAA4ClC,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 10000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\n\nconst bodyEl = document.querySelector('body');\nbodyEl.style.backgroundColor = '#f7eff4';\n// console.log(bodyEl);\nconst formEl = document.querySelector('.form');\n\nconst buttonEl = document.querySelector('button[type=\"submit\"]');\n\nconst delayEl= document.querySelector('input[name=\"delay\"]');\n// console.log(delayEl);\nconst stepEl= document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n \ndelayEl.addEventListener('input', (event) => {\n \n    delayEl.textContent = Number(event.currentTarget.value);\n    console.dir(delayEl.textContent);\n  });\n\nstepEl.addEventListener('input', (event) => {\n \n    stepEl.textContent = Number(event.currentTarget.value);\n    console.log(stepEl.textContent);\n\n});\namountEl.addEventListener('input', (event) => {\n amountEl.textContent = Number(event.currentTarget.value);\n    console.log(amountEl.textContent);\n\n});\n\n\n   buttonEl.addEventListener('click', onPromiseCreate);\n\nif (delayEl.textContent < 0 || stepEl.textContent < 0 || amountEl.textContent<=0) {\n  Notify.failure(\"❌Please choose a value greater than  0\", options);\nreturn} else {}\n\nfunction createPromise(position, delay) {\n  // event.preventDefault();\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n         \n        // Fulfill\n      } else {\n         reject({ position, delay }); \n       \n        // Reject\n      }\n    }, delay);\n  } \n  ) \n};\n\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n  if (delayEl.textContent < 0 || stepEl.textContent < 0 || amountEl.textContent <= 0) {\n    Notify.failure(\"❌Please choose a value greater than  0\", options);\n    return\n  } else {\n    console.log(event.currentTarget);\n    let promiseDelay = Number(delayEl.textContent);\n    for (let i = 1; i <= amountEl.textContent; i += 1) {\n    \n      createPromise(i, promiseDelay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, options);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, options);\n        });\n      promiseDelay += Number(stepEl.textContent);\n    };\n    // event.currentTarget.reset(); }\n  };\n}\n"],"names":["$h6c0i","parcelRequire","options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","document","querySelector","style","backgroundColor","buttonEl","delayEl","stepEl","amountEl","createPromise","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","textContent","Number","currentTarget","value","console","dir","log","preventDefault","Notify","failure","promiseDelay","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.4b586a4c.js.map"}
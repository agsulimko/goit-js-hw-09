{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SACMC,EAAU,CACdC,SAAU,gBACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,EACdC,kBAAmB,cAGNC,SAASC,cAAc,QAC/BC,MAAMC,gBAAkB,UAEhBH,SAASC,cAAc,SAAtC,IAEMG,EAAWJ,SAASC,cAAc,yBAElCI,EAASL,SAASC,cAAc,uBAEhCK,EAAQN,SAASC,cAAc,sBAC/BM,EAAWP,SAASC,cAAc,wBAmCxC,SAASO,EAAcd,EAAUe,GAE/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEjB,WAAUe,UAInBG,EAAO,CAAElB,WAAUe,S,GAIrBA,E,IA/CPJ,EAAQW,iBAAiB,SAAS,SAACC,GAC7BC,OAAOD,EAAME,cAAcC,OAAS,EACtC7B,EAAA8B,OAAOC,QAAQ,yCAA4C7B,IAG3DY,EAAQkB,YAAcL,OAAOD,EAAME,cAAcC,OACjDI,QAAQC,IAAIpB,EAAQkB,a,IAKxBjB,EAAOU,iBAAiB,SAAS,SAACC,GAC5BC,OAAOD,EAAME,cAAcC,OAAS,EACtC7B,EAAA8B,OAAOC,QAAQ,yCAA4C7B,IAG3Da,EAAOiB,YAAcL,OAAOD,EAAME,cAAcC,OAChDI,QAAQE,IAAIpB,EAAOiB,a,IAGvBhB,EAASS,iBAAiB,SAAS,SAACC,GAC9BC,OAAOD,EAAME,cAAcC,QAAU,EACtC7B,EAAA8B,OAAOC,QAAQ,yCAA4C7B,IAG5Dc,EAASgB,YAAcL,OAAOD,EAAME,cAAcC,OAClDI,QAAQE,IAAInB,EAASgB,a,IAKtBnB,EAASY,iBAAiB,SAoB7B,SAAyBC,GACvBA,EAAMU,iBACNH,QAAQE,IAAIT,EAAME,eAElB,IADA,IAAIS,EAAeV,OAAOb,EAAQkB,aACzBM,EAAI,EAAGA,GAAKtB,EAASgB,YAAaM,GAAK,EAE9CrB,EAAcqB,EAAGD,GACdE,MAAK,SAAAC,G,IAAGrC,EAAQqC,EAARrC,SAAUe,EAAKsB,EAALtB,MAClBlB,EAAA8B,OAAOW,QAAQ,uBAAwCC,OAAfvC,EAAS,QAAYuC,OAANxB,EAAM,MAAKhB,E,IAElEyC,OAAM,SAAAH,G,IAAGrC,EAAQqC,EAARrC,SAAUe,EAAKsB,EAALtB,MAClBlB,EAAA8B,OAAOC,QAAQ,sBAAqCW,OAAfvC,EAAS,QAAYuC,OAANxB,EAAM,MAAKhB,E,IAEnEmC,GAAgBV,OAAOZ,EAAOiB,Y","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst options = {\n  position: 'center-bottom',\n  distance: '15px',\n  borderRadius: '15px',\n  timeout: 10000,\n  clickToClose: true,\n  cssAnimationStyle: 'from-right',\n};\n\nconst bodyEl = document.querySelector('body');\nbodyEl.style.backgroundColor = '#f7eff4';\n// console.log(bodyEl);\nconst formEl = document.querySelector('.form');\n\nconst buttonEl = document.querySelector('button[type=\"submit\"]');\n\nconst delayEl= document.querySelector('input[name=\"delay\"]');\n// console.log(delayEl);\nconst stepEl= document.querySelector('input[name=\"step\"]');\nconst amountEl = document.querySelector('input[name=\"amount\"]');\n \ndelayEl.addEventListener('input', (event) => {\n  if (Number(event.currentTarget.value) < 0) {\n    Notify.failure(\"❌Please choose a value greater than  0\", options);\n   \n  } else {\n    delayEl.textContent = Number(event.currentTarget.value);\n    console.dir(delayEl.textContent);\n  };\n}\n);\n\nstepEl.addEventListener('input', (event) => {\n  if (Number(event.currentTarget.value) < 0) {\n    Notify.failure(\"❌Please choose a value greater than  0\", options);\n    \n  } else {\n    stepEl.textContent = Number(event.currentTarget.value);\n    console.log(stepEl.textContent);\n  };\n});\namountEl.addEventListener('input', (event) => {\n  if (Number(event.currentTarget.value) <= 0) {\n     Notify.failure(\"❌Please choose a value greater than  0\", options); \n  \n  } else {\n    amountEl.textContent = Number(event.currentTarget.value);\n    console.log(amountEl.textContent);\n  }\n});\n\n\n   buttonEl.addEventListener('click', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  // event.preventDefault();\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n         \n        // Fulfill\n      } else {\n         reject({ position, delay }); \n       \n        // Reject\n      }\n    }, delay);\n  } \n  ) \n};\nfunction onPromiseCreate(event) {\n  event.preventDefault();\n  console.log(event.currentTarget);\n  let promiseDelay = Number(delayEl.textContent);\n  for (let i = 1; i <= amountEl.textContent; i += 1) {\n    \n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n       Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, options );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, options);\n      });\n    promiseDelay += Number(stepEl.textContent);\n  };\n  // event.currentTarget.reset(); \n};"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$options","position","distance","borderRadius","timeout","clickToClose","cssAnimationStyle","document","querySelector","style","backgroundColor","$ce04d3a99e08e73b$var$buttonEl","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","Number","currentTarget","value","Notify","failure","textContent","console","dir","log","preventDefault","promiseDelay","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.f08d5e43.js.map"}